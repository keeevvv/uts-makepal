# Nama workflow
name: Check Version & Deploy to Vercel

# Pemicu workflow
on:
  # Berjalan saat ada push ke branch main
  push:
    branches: [main]
  # Berjalan saat ada pull request yang menargetkan branch main
  pull_request:
    branches: [main]

# Daftar pekerjaan yang akan dijalankan
jobs:
  # JOB 1: Validasi versi pada Pull Request
  validate-version:
    # Hanya berjalan jika eventnya adalah 'pull_request'
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # fetch-depth: 0 diperlukan untuk mengakses riwayat git
          fetch-depth: 0

      - name: Get current version from PR
        id: current_version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Get previous version from main
        id: previous_version
        run: |
          # Mengambil versi dari main, beri nilai default jika repo baru
          echo "version=$(git show origin/main:package.json | jq -r .version || echo "0.0.0")" >> $GITHUB_OUTPUT

      - name: Compare versions
        run: |
          current_v="${{ steps.current_version.outputs.version }}"
          previous_v="${{ steps.previous_version.outputs.version }}"

          echo "Comparing PR version ($current_v) with main version ($previous_v)..."

          # Jika versi sama, gagalkan PR
          if [ "$current_v" = "$previous_v" ]; then
            echo "❌ Version has not been updated. Please bump the version in package.json."
            exit 1
          fi

          # Cek jika versi baru lebih tinggi
          highest_version=$(printf '%s\n' "$previous_v" "$current_v" | sort -V | tail -n1)

          if [ "$highest_version" = "$current_v" ]; then
            echo "✅ Version check passed. ($current_v > $previous_v)"
          else
            echo "❌ Version must be higher than previous ($previous_v). Current is $current_v."
            exit 1
          fi

  # JOB 2: Deploy ke Vercel setelah push ke main
  deploy-to-vercel:
  if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  runs-on: ubuntu-latest

  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Vercel CLI
      run: npm install -g vercel

    - name: Pull Vercel Environment Info
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

    - name: Deploy to Vercel (Production)
      run: vercel --prod --yes --token=${{ secrets.VERCEL_TOKEN }}
